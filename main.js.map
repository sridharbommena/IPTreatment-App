{"version":3,"sources":["./src/app/service/ipTreatment-offering-service/ip-treatment-offering-service.service.ts","./src/app/components/user/user-welcome/user-welcome.component.ts","./src/app/components/user/user-welcome/user-welcome.component.html","./src/app/components/specialist-list/specialist-list.component.html","./src/app/components/specialist-list/specialist-list.component.ts","./src/app/error/unauthorized/unauthorized.component.ts","./src/app/error/unauthorized/unauthorized.component.html","./src/app/pages/login-page/login-page.component.ts","./src/app/pages/login-page/login-page.component.html","./src/app/components/register-patient/register-patient.component.ts","./src/app/components/register-patient/register-patient.component.html","./src/app/auth/user-guard.guard.ts","./src/environments/environment.ts","./src/app/pages/user-page/user-page.component.ts","./src/app/pages/user-page/user-page.component.html","./src/app/components/admin/admin-nav-bar/admin-nav-bar.component.ts","./src/app/components/admin/admin-nav-bar/admin-nav-bar.component.html","./src/app/components/active-patients/active-patients.component.html","./src/app/components/active-patients/active-patients.component.ts","./src/app/components/footer/footer.component.ts","./src/app/components/footer/footer.component.html","./src/app/pages/admin-page/admin-page.component.ts","./src/app/pages/admin-page/admin-page.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/service/login-service.service.ts","./src/app/app.module.ts","./src/app/components/insurer-names/insurer-names.component.ts","./src/app/components/insurer-names/insurer-names.component.html","./src/app/service/ipTreatment-service/iptreatment-service.service.ts","./src/app/components/inactive-patients/inactive-patients.component.html","./src/app/components/inactive-patients/inactive-patients.component.ts","./src/app/components/treatment-plan/treatment-plan.component.html","./src/app/components/treatment-plan/treatment-plan.component.ts","./src/app/interceptor/httpconfig.interceptor.ts","./src/app/error/error404/error404.component.ts","./src/app/error/error404/error404.component.html","./src/app/components/view-insurers/view-insurers.component.html","./src/app/components/view-insurers/view-insurers.component.ts","./src/app/components/admin/admin-welcome/admin-welcome.component.ts","./src/app/components/admin/admin-welcome/admin-welcome.component.html","./src/app/components/user/user-nav-bar/user-nav-bar.component.ts","./src/app/components/user/user-nav-bar/user-nav-bar.component.html","./src/app/models/AilmentCategory.ts","./src/app/components/iptreatment-packages/iptreatment-packages.component.ts","./src/app/components/iptreatment-packages/iptreatment-packages.component.html","./src/app/service/portal-service/portal-service.service.ts","./src/app/app-routing.module.ts","./src/app/auth/admin-guard.guard.ts","./src/main.ts","./src/app/service/insurance-claim-service/insurance-claim-service.service.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport{SpecialistsDetails} from '../../models/SpecialistsDetails'\nimport { Observable } from 'rxjs';\nimport { IpTreatmentPackages } from 'src/app/models/IpTreatmentPackages';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IpTreatmentOfferingServiceService {\n\n  baseUrl : string = \"http://localhost:8500/portal\"; \n  \n  constructor(private http:HttpClient) { }\n\n  getSpecialists():Observable<SpecialistsDetails[]>{\n    return this.http.get<SpecialistsDetails[]>(this.baseUrl + \"/specialists\");\n  }\n\n  getPackages():Observable<IpTreatmentPackages[]>{\n    return this.http.get<IpTreatmentPackages[]>(this.baseUrl + \"/ipTreatmentPackages\");\n   }\n\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'user-welcome',\n  templateUrl: './user-welcome.component.html',\n  styleUrls: ['./user-welcome.component.css']\n})\nexport class UserWelcomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div id=\"content\">\n    <h1 class=\"h1 display-2 text-center\" style=\"color: #6d7fcc;\">Welcome</h1>\n    <div class=\"center\"> <img src=\"../../../../assets/hospital.jpg\" class=\"hospital\"> </div>\n</div>","<div>\n    <h3 class=\"text-center\" style=\"color: #6d7fcc;\">List Of Specialists</h3>\n    <br>\n    <div>\n        <table *ngIf=\"dataAvailable\" class=\"table table-bordered text-center\">\n            <thead>\n                <tr>\n                    <th>ID</th>\n                    <th>Specialists Name</th>\n                    <th>Area Of Expertise</th>\n                    <th>Experience In Years</th>\n                    <th>Contact Number</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let specialist of specialists\">\n                    <td>{{specialist.specialistId}}</td>\n                    <td>{{specialist.name}}</td>\n                    <td>{{specialist.areaOfExpertise}}</td>\n                    <td>{{specialist.experienceInYears}}</td>\n                    <td>{{specialist.contactNumber}}</td>\n                </tr>\n            </tbody>\n        </table>\n        <div *ngIf=\"isFailure\" class=\"alert alert-danger col-6 form\" id=\"errorMessage\" role=\"alert\">\n            {{FailureMsg}}\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { IpTreatmentOfferingServiceService } from 'src/app/service/ipTreatment-offering-service/ip-treatment-offering-service.service';\nimport{SpecialistsDetails} from '../../models/SpecialistsDetails';\n\n@Component({\n  selector: 'app-specialist-list',\n  templateUrl: './specialist-list.component.html',\n  styleUrls: ['./specialist-list.component.css']\n})\nexport class SpecialistListComponent implements OnInit {\n\n  specialists:SpecialistsDetails[]=[];\n  constructor(private specialistService:IpTreatmentOfferingServiceService) { }\n\n  isFailure:boolean=false;\n  FailureMsg:string=\"\";\n  dataAvailable:boolean=false;\n\n  ngOnInit(): void {\n    this.specialistService.getSpecialists().subscribe(data=>{\n      this.specialists=data;\n      this.dataAvailable=true;\n    },\n    (error)=>\n    {\n      this.dataAvailable=false;\n      this.isFailure = true;\n      this.FailureMsg = \"Error While retrieving Specialist list\"\n    });\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { LoginServiceService } from 'src/app/service/login-service.service';\n\n@Component({\n  selector: 'app-unauthorized',\n  templateUrl: './unauthorized.component.html',\n  styleUrls: ['./unauthorized.component.css']\n})\nexport class UnauthorizedComponent implements OnInit {\n\n  constructor(private service:LoginServiceService,private router:Router) { }\n\n  ngOnInit(): void {\n  }\n\n  handleClick()\n  {\n    if(this.service.getUser()==null)\n    {\n      this.router.navigateByUrl(\"/\");\n    }\n    else\n    {\n      if(this.service.getUser()==\"admin\")\n      {\n        this.router.navigateByUrl(\"/admin\");\n      }\n      else if(this.service.getUser().startsWith(\"user\"))\n      {\n        this.router.navigateByUrl(\"/user\");\n      }\n      else\n      {\n        this.router.navigateByUrl(\"/\");\n      }\n    }\n  }\n\n}\n","<div class=\"container text-center mt-5\">\n\n    <h1 class=\"display-1\">Unauthorized</h1>\n    <input type=\"button\" class=\"btn btn-danger\" (click)=\"handleClick()\"  value=\"Go Home\">\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { TokenResponse } from 'src/app/models/TokenResponse';\nimport { LoginServiceService } from 'src/app/service/login-service.service';\n\n@Component({\n  selector: 'login-page',\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.css']\n})\nexport class LoginPageComponent implements OnInit {\n\n  \n  constructor(private form:FormBuilder,private service:LoginServiceService, private route:Router) { }\n  \n  ngOnInit(): void {\n    \n    if(this.service.isLoggedIn())\n    {\n      if(this.service.getUser()=='admin')\n      this.route.navigate([\"/admin\"]);\n      if( this.service.getUser()!=null  && this.service.getUser().startsWith(\"user\") )\n      this.route.navigate([\"/user\"]);\n    }\n\n  }\n\n  errorMessage = \"\";\n\n  UserDetails = this.form.group({\n\n    userName : new FormControl(\"\", Validators.required),\n    password : [\"\", Validators.required],\n  });\n\n  get userName()\n  {\n    return this.UserDetails.get('userName');\n  }\n\n  get password()\n  {\n    return this.UserDetails.get('password');\n  }\n\n  handleSubmit()\n  {\n    if(this.UserDetails.valid)\n    {\n      this.service.authenticate(this.UserDetails.value).subscribe((success:TokenResponse)=>{\n          this.errorMessage=\"\";\n          this.service.loginUser(success.token);\n          this.service.saveUser(this.userName.value);\n          if(this.service.getUser()=='admin')\n            this.route.navigate([\"/admin\"]);\n          if(  this.service.getUser()!=null  &&  this.service.getUser().startsWith(\"user\") )\n            this.route.navigate([\"/user\"]);\n        },\n        error =>\n        {\n          this.errorMessage = \"Invalid Credentials\";\n        }\n      )\n    }\n \n  }\n\n}\n","<div class=\"container-fluid px-1 px-md-5 px-lg-1 px-xl-5 py-5 mx-auto\">\n    <div class=\"card card0 border-0\">\n        <div class=\"row d-flex\">\n            <div class=\"col-lg-6\">\n                <div class=\"card1 pb-5\">\n                    <div class=\"row\"> <img src=\"../../assets/Hospital-Logo.png\" class=\"logo\"> </div>\n                    <div class=\"row px-3 justify-content-center mt-4 mb-5 border-line\"> <img src=\"../../assets/hospital.jpg\" class=\"image\"> </div>\n                </div>\n            </div>\n            <div class=\"col-lg-6\">\n                <div class=\"card2 card border-0 px-4 py-5\">\n                    \n                    <div class=\"row mb-4 px-3\">\n                        <h3 class=\"text-capitalize display-6\">International patient treatment management system</h3>\n                    </div>\n                    \n                    <br>\n\n\n                <form [formGroup]=\"UserDetails\" class=\"form\" (ngSubmit)=\"handleSubmit()\" >\n                        <div class=\"row px-3\"> \n                            <label class=\"mb-1\">    <h6 class=\"mb-0 text-sm err\">Username\n                            <span *ngIf=\"userName.invalid && (userName.dirty || userName.touched)\" class=\"text-danger\">\n                                &nbsp;*required</span>\n                            </h6></label> \n                            <input class=\"mb-4\" type=\"text\" formControlName=\"userName\" placeholder=\"Enter Username\">\n                             \n                        </div>\n                        <div class=\"row px-3\"> \n                            <label class=\"mb-1\">  <h6 class=\"mb-0 text-sm\">Password\n                                <span *ngIf=\"password.invalid && (password.dirty || password.touched)\" class=\"text-danger\">\n                                    &nbsp;*required</span>\n                            </h6>  </label> \n                            <input type=\"password\" formControlName=\"password\" placeholder=\"Enter password\"> \n                        </div>\n                            <br>\n                        <div class=\"row mb-3 px-3\"> \n                            <button type=\"submit\" class=\"btn btn-blue text-center\">Login</button> \n                        </div>\n                        <b *ngIf=\"errorMessage\" class=\"text-danger\">{{errorMessage}}</b>\n                </form>\n                </div>\n            \n\n            </div>\n        </div>\n        <div class=\"bg-blue py-4\">\n            <div class=\"row px-3\"> <small class=\"ml-4 ml-sm-5 mb-2\">Copyright &copy; 2021. All rights reserved.</small>\n                \n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, Validators ,FormGroup} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { IptreatmentServiceService } from 'src/app/service/ipTreatment-service/iptreatment-service.service';\nimport { first } from 'rxjs/operators';\n\nimport * as $ from 'jquery';\n@Component({\n  selector: 'app-register-patient',\n  templateUrl: './register-patient.component.html',\n  styleUrls: ['./register-patient.component.css']\n})\nexport class RegisterPatientComponent implements OnInit {\n\n  ailment:string[] = [\"ORTHOPAIDICS\",\"UROLOGY\"];\n  package:string[] = [\"Package 1\",\"Package 2\"] ;\n  \n  constructor(private form:FormBuilder,\n    private service:IptreatmentServiceService,\n    private route:Router) {\n      // this.Validation();\n     }\n  \n  ngOnInit(): void {\n  }\n  \n  today:Date=new Date();\n  isSuccess = false;\n  isFailure = false;\n  FailureMsg = \"\";\n  utilErrorMsg:string = \"\";\n\n  registerForm = this.form.group({\n    name: ['', Validators.required],\n    age: ['', Validators.required],\n    aadharNumber:['', Validators.required],\n    ailment: ['', Validators.required],\n    treatmentPackageName: ['', [Validators.required]],\n    treatmentCommencementDate: ['', [Validators.required]]\n});\n  \n  validate():boolean{\n    var re = /^[A-Z a-z]+$/;\n    var pattern=/^\\d{4}\\d{4}\\d{4}$/ ;\n\n    if(!re.test(this.registerForm.get(\"name\").value))\n    {\n      this.isFailure = true;\n      this.FailureMsg = \"Enter name using characters only\";\n      this.isSuccess = false;\n      return false;\n    }\n    if(!(this.registerForm.get(\"age\").value>=1 && this.registerForm.get(\"age\").value<=110))\n    {\n      this.isFailure = true;\n      this.FailureMsg = \"Enter valid age between 1 to 110\";\n      this.isSuccess = false;\n      return false;\n    }\n    if(!pattern.test(this.registerForm.get(\"aadharNumber\").value)){\n      this.isFailure = true;\n      this.FailureMsg = \"Enter Valid Aadhar number\";\n      this.isSuccess = false;\n      return false;\n    }\n    else\n    {\n      this.isFailure = false;\n      this.FailureMsg = \"\";\n      this.isSuccess = false;\n      return true;\n    }\n  }\n\n  onSubmit() {\n    \n    if(this.registerForm.valid)\n    {\n        if(this.validate())\n        {\n          this.service.register(this.registerForm.value).subscribe(\n            (success)=>{\n              this.isFailure = false;\n                this.FailureMsg = \"\";\n              this.isSuccess = true;\n            },\n            (error)=>{\n              this.isSuccess = false;\n              this.isFailure = true;\n              this.FailureMsg = error.error.message;\n            });\n        }      \n    }\n    else\n    {\n      this.isSuccess = false;\n      this.isFailure = true;\n      this.FailureMsg = \"Please enter valid details!\";\n    }\n  \n  }\n\n  getToday():string\n  {\n    var date = new Date();\n\n    var month;\n    var day;\n\n    if((date.getMonth()+1).toString().length==1)\n    {\n      month = \"-0\"+(date.getMonth()+1)\n    }\n    else\n    {\n      month = \"-\"+(date.getMonth()+1)\n    }\n    if((date.getDate()).toString().length==1)\n    {\n      day = \"-0\"+(date.getDate());\n    }\n    else\n    {\n      day = \"-\"+(date.getDate());\n    }\n    \n    return date.getFullYear()+month+day;\n  }\n\n}\n","<div id=\"content\">\n    <h2 class=\"text-center\" style=\"color: #6d7fcc;\">Patient Registration</h2>\n  <div class=\"form\">\n    <form [formGroup]=\"registerForm\" class=\"form\" (ngSubmit)=\"onSubmit()\" >\n        <div class=\"form-group \">\n          <div class=\"col-8\">\n              <label for=\"name\">Patient name:</label>\n              <input type=\"text\" class=\"form-control\" formControlName=\"name\" placeholder=\"Enter Patient Name\" name=\"name\" \n              title=\"Please include character Only\" autocomplete=\"off\" required>\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <div class=\"col-8\">\n            <label for=\"name\">Patient age:</label>\n            <input type=\"number\" class=\"form-control\" autocomplete=\"off\" formControlName=\"age\" placeholder=\"Enter Patient Age\" name=\"age\" min=\"1\" max=\"110\" required>\n          </div>\n        </div>\n        <div class=\"form-group\"> \n          <div class=\"col-8\">\n            <label for=\"name\">Aadhar Number</label>\n            <input type=\"number\" class=\"form-control\" autocomplete=\"off\" formControlName=\"aadharNumber\" autocomplete=\"off\" placeholder=\"Enter Aadhar number\" name=\"aadharNumber\" \n              min=\"100000000000\" max=\"999999999999\"\n              minlength=\"12\" maxLength=\"12\" title=\"Aadhar Card Number\" requried>\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <div class=\"col-8\">\n            <label>Select Ailment</label>\n            <select class=\"form-select form-select mb-3\"  aria-label=\"form-select example\" formControlName=\"ailment\">\n                <option selected value=\"\">--Select--</option>\n                <option *ngFor=\"let a of ailment\" value=\"{{a}}\">{{a}}</option>\n            </select>\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <div class=\"col-8\">\n            <label>Select Package</label>\n            <select formControlName=\"treatmentPackageName\" class=\"form-select form-select mb-3\" aria-label=\".form-select example\">\n                <option selected value=\"\">--Select--</option>\n                <option *ngFor=\"let pack of package\" value=\"{{pack}}\">{{pack}}</option>\n            </select>\n          </div>\n        </div>\n        \n        <label for=\"name\">Commencement Date:</label>\n        <div class=\"form-group\">\n          <div class=\"col-8\">\n            <input class=\"form-control\" autocomplete=\"off\" formControlName=\"treatmentCommencementDate\" id=\"datepicker\" type=\"date\" [min]=\"getToday()\" required>\n          </div>\n        </div>\n        <button type=\"submit\" class=\"btn btn-blue\">Submit</button> \n        <button type=\"reset\" class=\"btn btn-blue\">Reset</button>\n      </form>\n      <br>\n      <div *ngIf=\"isSuccess\" class=\"alert alert-success col-6 form\" role=\"alert\">\n        Registration Successful! check treatment plan for more info.\n      </div>\n      <div *ngIf=\"isFailure\" class=\"alert alert-danger col-6 form\" id=\"commencementDate\" role=\"alert\">\n        {{FailureMsg}}\n      </div>\n    </div>\n    <br>\n    <br>\n    <br>\n</div>","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, CanActivateChild, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { LoginServiceService } from '../service/login-service.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserGuardGuard implements CanActivate,CanActivateChild {\n\n  constructor(private service:LoginServiceService,private router:Router){}\n  canActivateChild(childRoute: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean | UrlTree | Observable<boolean | UrlTree> | Promise<boolean | UrlTree> {\n\n    if(this.service.getUser()==null)\n      {\n        this.router.navigateByUrl(\"/401\");\n        return false;\n      }  \n      if(this.service.getUser().startsWith(\"user\"))\n      {\n        return true;\n      }\n      else\n      {\n        this.router.navigateByUrl(\"/401\");\n        return false;\n      }\n\n  }\n  \n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    \n      if(this.service.getUser()==null)\n      {\n        this.router.navigateByUrl(\"/401\");\n        return false;\n      }  \n      if(this.service.getUser().startsWith(\"user\"))\n      {\n        return true;\n      }\n      else\n      {\n        this.router.navigateByUrl(\"/401\");\n        return false;\n      }\n    \n  }\n  \n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { LoginServiceService } from 'src/app/service/login-service.service';\n\n@Component({\n  selector: 'app-user-page',\n  templateUrl: './user-page.component.html',\n  styleUrls: ['./user-page.component.css']\n})\nexport class UserPageComponent implements OnInit {\n\n  constructor(private service:LoginServiceService,private router:Router) { }\n\n  ngOnInit(): void {\n  }\n\n  handleLogout()\n  {\n    this.service.logOut();\n    this.router.navigateByUrl(\"/login\");\n  }\n\n}\n","<div class=\"wrapper\">\n    <user-nav-bar></user-nav-bar>\n    <div class=\"www\" id=\"content\">\n        <router-outlet></router-outlet>    \n    </div>\n    <footer-component></footer-component>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { LoginServiceService } from 'src/app/service/login-service.service';\n\n@Component({\n  selector: 'admin-nav-bar',\n  templateUrl: './admin-nav-bar.component.html',\n  styleUrls: ['./admin-nav-bar.component.css']\n})\nexport class AdminNavBarComponent implements OnInit {\n\n  constructor(private service:LoginServiceService,private router:Router) { }\n\n  ngOnInit(): void {\n  }\n\n  doLogOut()\n  {\n    this.service.logOut();\n    this.router.navigateByUrl(\"/login\");\n  }\n\n}\n","<head>\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n</head>    \n    <nav id=\"sidebar\">\n        <div class=\"sidebar-header\">\n            <img src=\"../../../../assets/Hospital-Logo.png\" class=\"logo\">\n        </div>\n\n        <ul class=\"list-unstyled components\">\n            \n            <li>\n                <a routerLink=\"specialists\">Specialists</a>\n            </li>\n            <li>\n                <a routerLink=\"treatment-packages\">Service Packages</a>\n            </li>\n            <li>\n                <a routerLink=\"register-patient\">Register Patient</a>\n            </li>\n            <li>\n                <a routerLink=\"treatment-plan\">Treatment Plan</a>\n            </li>\n            <li>\n                <a routerLink=\"active-patients\">Active Patients</a>\n            </li>\n            <li>\n                <a routerLink=\"inactive-patients\">Inactive Patients</a>\n            </li>\n            <li>\n                <a routerLink=\"insurers\">Insurers</a>\n            </li>\n            <li>\n                <a (click)=\"doLogOut()\"><i class=\"fa fa-sign-out\" aria-hidden=\"true\"></i>Logout</a>\n            </li>\n        </ul>\n    </nav>","<div>\n    <h3 class=\"text-center\" style=\"color: #6d7fcc;\">List Of Active Patients</h3>\n    <br>\n    <div>\n        <table class=\"table table-bordered text-center\">\n                    <thead>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<th class=\"center\">S.No</th>\n\t\t\t\t\t\t\t<th>Patient Name</th>\n\t\t\t\t\t\t\t<th class=\"center\">Age</th>\n\t\t\t\t\t\t\t<th>Ailment</th>\n\t\t\t\t\t\t\t<th>Package Name</th>\n\t\t\t\t\t\t\t<th>Commencement Date</th>\n\t\t\t\t\t\t\t<th>Action</th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\n            <tbody>\n                <tr *ngFor=\"let patient of patients\">\n                    <td class=\"counterCell\"></td>\n                    <td>{{patient.name}}</td>\n                    <td>{{patient.age}}</td>\n                    <td>{{patient.ailment}}\n                    <td>{{patient.treatmentPackageName}}</td>\n                    <td>{{patient.treatmentCommencementDate}}</td>\n                    <td>\n                        <a class=\"btn btn-outline-success\" (click)=\"handleClick(patient)\"> Mark as complete</a></td> \n\n                        <!-- <a class=\"btn btn-outline-success\" [routerLink]=\"['/insurers-names',patient.name]\"> Mark as complete</a></td>  -->\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TreatmentPlan } from 'src/app/models/TreatmentPlan';\nimport { PortalServiceService } from 'src/app/service/portal-service/portal-service.service';\nimport{ PatientDetails } from '../../models/PatientDetails';\n@Component({\n  selector: 'app-active-patients',\n  templateUrl: './active-patients.component.html',\n  styleUrls: ['./active-patients.component.css']\n})\nexport class ActivePatientsComponent implements OnInit {\n  id:number=0;\n  patients:PatientDetails[]=[];\n  constructor(private portalService:PortalServiceService,private router:Router) { }\n\n  ngOnInit(): void {\n    this.portalService.getActivePatients().subscribe(data=>{\n      this.patients=data;\n      \n      \n    });\n  }\n  handleClick(patient:PatientDetails)\n  {\n    if(confirm(\"Are you sure you want to mark this patient as complete ?\")) {\n      this.router.navigate(['/admin/insurers-names',patient.name,patient.ailment]);\n      \n    }  \n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'footer-component',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer class=\"text-center text-lg-start bg-light text-muted fixed-bottom\">\n\t\t\t\n    <div class=\"text-center p-4\" style=\"background-color: rgba(0, 0, 0, 0.05);\">\n        © 2021 Pod4 Copyright:\n        <a class=\"text-reset fw-bold\" href=\"#\">International Patients Management System</a>\n      </div>\n</footer>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { LoginServiceService } from 'src/app/service/login-service.service';\n\n@Component({\n  selector: 'app-admin-page',\n  templateUrl: './admin-page.component.html',\n  styleUrls: ['./admin-page.component.css']\n})\nexport class AdminPageComponent implements OnInit {\n\n  constructor(private service:LoginServiceService,private router:Router) { }\n\n  ngOnInit(): void {\n  }\n\n  handleLogout()\n  {\n    this.service.logOut();\n    this.router.navigateByUrl(\"/login\");\n  }\n\n}\n","<!-- <p>admin-page works!</p>\n<input type=\"button\" class=\"btn btn-primary\" (click)=\"handleLogout()\" value=\"Logout\" />\n\n<view-insurers></view-insurers>\n<insurer-names></insurer-names> -->\n\n<div class=\"wrapper\">\n    <admin-nav-bar></admin-nav-bar>\n    <div class=\"www\" id=\"content\">\n        <router-outlet></router-outlet>    \n    </div>\n    <footer-component></footer-component>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'IPTreatment-UI';\n}\n","<router-outlet></router-outlet>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { TokenResponse } from '../models/TokenResponse';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginServiceService {\n\n  baseUrl : string = \"http://localhost:8500/portal\"; \n\n  constructor(private http:HttpClient) { }\n\n  authenticate(userDetails):Observable<TokenResponse>\n  {\n    return this.http.post<TokenResponse>(this.baseUrl + \"/login\",userDetails);\n  }\n\n  loginUser(token)\n  {\n    sessionStorage.setItem(\"token\",token);\n\n    // setTimeout(function() { sessionStorage.clear(); }, ( 30 * 60 * 1000));\n\n    // console.log(token);\n    return true;\n  }\n\n  saveUser(username)\n  {\n    sessionStorage.setItem(\"user\",username);\n    return true;\n  }\n\n  getUser()\n  {\n    return sessionStorage.getItem(\"user\");\n  }\n\n  isLoggedIn()\n  {\n    let token = sessionStorage.getItem(\"token\");\n    if(token==null || token==undefined || token==\"\")\n      return false;\n    else\n      return true;\n  }\n  \n  logOut()\n  {\n    sessionStorage.removeItem(\"token\");\n    sessionStorage.removeItem(\"user\");\n    return true;\n  }\n\n  getToken()\n  {\n    return sessionStorage.getItem(\"token\");\n  }\n  \n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginPageComponent } from './pages/login-page/login-page.component';\nimport { AdminPageComponent } from './pages/admin-page/admin-page.component';\nimport { UserPageComponent } from './pages/user-page/user-page.component';\n\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { UnauthorizedComponent } from './error/unauthorized/unauthorized.component';\nimport { Error404Component } from './error/error404/error404.component';\nimport { ViewInsurersComponent } from './components/view-insurers/view-insurers.component';\nimport { HttpConfigInterceptor } from './interceptor/httpconfig.interceptor';\nimport { InsurerNamesComponent } from './components/insurer-names/insurer-names.component';\nimport { SpecialistListComponent } from './components/specialist-list/specialist-list.component';\nimport { AdminNavBarComponent } from './components/admin/admin-nav-bar/admin-nav-bar.component';\nimport { AdminWelcomeComponent } from './components/admin/admin-welcome/admin-welcome.component';\nimport { IptreatmentPackagesComponent } from './components/iptreatment-packages/iptreatment-packages.component';\nimport { ActivePatientsComponent } from './components/active-patients/active-patients.component';\nimport { InactivePatientsComponent } from './components/inactive-patients/inactive-patients.component';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { UserNavBarComponent } from './components/user/user-nav-bar/user-nav-bar.component';\nimport { UserWelcomeComponent } from './components/user/user-welcome/user-welcome.component';\nimport { RegisterPatientComponent } from './components/register-patient/register-patient.component';\nimport { TreatmentPlanComponent } from './components/treatment-plan/treatment-plan.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginPageComponent,\n    AdminPageComponent,\n    UserPageComponent,\n    UnauthorizedComponent,\n    Error404Component,\n    ViewInsurersComponent,\n    InsurerNamesComponent,\n    SpecialistListComponent,\n    AdminNavBarComponent,\n    AdminWelcomeComponent,\n    IptreatmentPackagesComponent,\n    ActivePatientsComponent,\n    InactivePatientsComponent,\n    FooterComponent,\n    UserNavBarComponent,\n    UserWelcomeComponent,\n    RegisterPatientComponent,\n    TreatmentPlanComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule\n  ],\n  providers: [{ provide: HTTP_INTERCEPTORS, useClass: HttpConfigInterceptor, multi: true }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { DepFlags } from '@angular/compiler/src/core';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { AilmentCategory } from 'src/app/models/AilmentCategory';\nimport { InitiateClaim } from 'src/app/models/InitiateClaim';\nimport { InsurerDetail } from 'src/app/models/InsurerDetail';\nimport { InsuranceClaimServiceService } from 'src/app/service/insurance-claim-service/insurance-claim-service.service';\n\n@Component({\n  selector: 'insurer-names',\n  templateUrl: './insurer-names.component.html',\n  styleUrls: ['./insurer-names.component.css']\n})\nexport class InsurerNamesComponent implements OnInit {\n\n  insurerNames:InsurerDetail[] = []\n  constructor(private service:InsuranceClaimServiceService,private router:ActivatedRoute,private form:FormBuilder) { }\n\n  patientName:string;\n  ailment:AilmentCategory;\n  ailmentString:string;\n  balanceAmountToBePaid:number;\n  displayTable:boolean = false;\n\n  ngOnInit(): void {\n    this.getInsurerNames();\n    this.patientName = this.router.snapshot.paramMap.get('name');\n    this.ailmentString = this.router.snapshot.paramMap.get('ailment');\n\n    if(this.ailmentString==\"UROLOGY\")\n      this.ailment=AilmentCategory.UROLOGY;\n    else\n      this.ailment=AilmentCategory.ORTHOPAIDICS;\n  }\n\n  errorMessage = \"\";\n  isFailure = false;\n\n  initiateClaim:InitiateClaim;\n\n  insurerName = this.form.group({\n    insurer : new FormControl(\"\", Validators.required),\n  });\n\n  get insurer()\n  {\n    return this.insurerName.get('insurer');\n  }\n\n  getInsurerNames()\n  {\n    this.service.getInsurers().subscribe(\n      (success)=>{\n        this.insurerNames = success;\n      },\n      (error:string)=>{\n        console.log(error);\n      });\n  }\n\n  handleSubmit()\n  {\n    if(confirm(\"Are you sure you want to initiate claim ?\")) {\n      console.log(\"Initiating claim...\");\n\n      this.initiateClaim = { id: 1 , ailment:this.ailment,patientName:this.patientName,insurerName:this.insurer.value };\n\n      this.service.initiateClaimRequest(this.initiateClaim).subscribe(\n        (data)=>{\n          this.balanceAmountToBePaid=data;\n          this.displayTable =true\n          this.isFailure = false;\n        },(error)=>{\n          this.isFailure = true;\n          this.errorMessage = error.error.message;\n          this.displayTable = false;\n        });\n    }\n\n  }\n\n}\n","<div>\n\n    <h2 class=\"text-center\" style=\"color: #6d7fcc;\" >Select Insurer</h2>\n\n    <div class=\"drop\">\n        <form [formGroup]=\"insurerName\" (ngSubmit)=\"handleSubmit()\" >\n        <select *ngIf=\"insurerNames.length > 0\" formControlName=\"insurer\" class=\"form-select form-select mb-3\" aria-label=\".form-select example\">\n            \n             <option value=\"\" disabled selected>--Select Insurer--</option>\n            <option *ngFor=\"let name of insurerNames\">{{name.insurerName}}</option>\n        </select>\n        <input type=\"submit\" value=\"Intiate Claim\" class=\"btn btn-blue\" />\n        </form>\n    </div>\n    <br>\n    <br>\n    <br>\n\n    <div *ngIf=\"isFailure\" class=\"alert alert-danger col-6 form error\" role=\"alert\">\n        {{errorMessage}}\n      </div>\n\n    <div *ngIf=\"displayTable\">\n        <table class=\"table table-bordered text-center\" >\n            <tr>\n                <th>Patient Name</th>\n                <td>{{patientName}}</td>\n            </tr>\n            <tr>\n                <th>Insurer Name</th>\n                <td>{{insurer.value}}</td>\n            </tr>\n            <tr>\n                <th>Balance Amount to be paid</th>\n                <td>{{balanceAmountToBePaid}}</td>\n            </tr>\n        </table>\n    </div>\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router, NavigationStart } from '@angular/router';\nimport { Observable, Subject } from 'rxjs';\nimport { PatientDetails } from 'src/app/models/PatientDetails';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IptreatmentServiceService {\n\n  constructor(private http:HttpClient,private router: Router) {}\n\n  baseUrl : string = \"http://localhost:8500/portal\"; \n\n  register(patient: PatientDetails) {\n    return this.http.post(this.baseUrl + \"/treatmentRegister\", patient);\n  }\n}\n","<div>\n    <h3 class=\"text-center\" style=\"color: #6d7fcc;\">List Of InActive Patients</h3>\n    <br>\n    <div>\n        <table class=\"table table-bordered text-center\">\n            <thead>\n                <tr>\n                    <th>S.No</th>\n                    <th>Patients Name</th>\n                    <th>Age</th>\n                    <th>Ailments</th>\n                    <th>Package Name</th>\n                    <th>Treatment End Date</th>\n                </tr>\n            </thead>\n\n            <tbody>\n                <tr *ngFor=\"let patient of patients\">\n                    <td class=\"counterCell\"></td>\n                    <td>{{patient.patientDetails.name}}</td>\n                    <td>{{patient.patientDetails.age}}</td>\n                    <td>{{patient.patientDetails.ailment}}\n                    <td>{{patient.patientDetails.treatmentPackageName}}</td>\n                    <td>{{patient.treatmentEndDate}}</td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { PatientDetails } from 'src/app/models/PatientDetails';\nimport { TreatmentPlan } from 'src/app/models/TreatmentPlan';\nimport { PortalServiceService } from 'src/app/service/portal-service/portal-service.service';\n\n@Component({\n  selector: 'app-inactive-patients',\n  templateUrl: './inactive-patients.component.html',\n  styleUrls: ['./inactive-patients.component.css']\n})\nexport class InactivePatientsComponent implements OnInit {\n\n  id:number=0;\n  patients:TreatmentPlan[]=[];\n  constructor(private portalService:PortalServiceService,private router:Router) { }\n  \n\n  ngOnInit(): void {\n    this.portalService.getInActivePatients().subscribe(data=>{\n        this.patients=data;\n        \n        \n      });\n  }\n\n}\n","<div>\n    <h3 class=\"text-center\" style=\"color: #6d7fcc;\">Treatment Plan</h3>\n    <br>\n    <div>\n        <table class=\"table table-bordered text-center\">\n            <thead>\n                <tr>\n                    <th>#</th>\n                    <th>Patient Name</th>\n                    <th>Patient Age</th>\n                    <th>Package Name</th>\n                    <th>Test Details</th>\n                    <th>Cost</th>\n                    <th>Specialist</th>\n                    <th>Commencement Date</th>\n                    <th>End Date</th>\n                </tr>\n            </thead>\n\n            <tbody>\n                <tr *ngFor=\"let treatment of treatmentPlan\">\n                    <td class=\"counterCell\"></td>\n                    <td>{{treatment.patientDetails.name}}</td>\n                    <td>{{treatment.patientDetails.age}}</td>\n                    <td>{{treatment.packageName}}</td>\n                    <td>{{treatment.testDetails}}</td>\n                    <td>{{treatment.cost}}</td>\n                    <td>{{treatment.specialist}}</td>\n                    <td>{{treatment.treatmentCommenceDate}}</td>\n                    <td>{{treatment.treatmentEndDate}}\n                </tr>\n            </tbody>\n        </table>\n    </div>\n\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TreatmentPlan } from 'src/app/models/TreatmentPlan';\nimport { PortalServiceService } from 'src/app/service/portal-service/portal-service.service';\n\n@Component({\n  selector: 'app-treatment-plan',\n  templateUrl: './treatment-plan.component.html',\n  styleUrls: ['./treatment-plan.component.css']\n})\nexport class TreatmentPlanComponent implements OnInit {\n\n  id:number=0;\n  treatmentPlan:TreatmentPlan[]=[];\n  constructor(private portalService:PortalServiceService,private router:Router) { }\n  \n\n  ngOnInit(): void {\n    this.portalService.getTreatmentPlan().subscribe(data=>{\n        this.treatmentPlan=data;\n        // console.log(data);\n    });\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport {\r\n    HttpInterceptor,\r\n    HttpRequest,\r\n    HttpResponse,\r\n    HttpHandler,\r\n    HttpEvent,\r\n    HttpErrorResponse\r\n} from '@angular/common/http';\r\n\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { map, catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class HttpConfigInterceptor implements HttpInterceptor {\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        const token: string = sessionStorage.getItem('token');\r\n\r\n        request = request.clone({\r\n            setHeaders: {\r\n              'Authorization': `Bearer ${token}`,\r\n            },\r\n          });\r\n          \r\n          return next.handle(request);\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { LoginServiceService } from 'src/app/service/login-service.service';\n\n@Component({\n  selector: 'app-error404',\n  templateUrl: './error404.component.html',\n  styleUrls: ['./error404.component.css']\n})\nexport class Error404Component implements OnInit {\n\n  constructor(private service:LoginServiceService,private router:Router) { }\n\n  ngOnInit(): void {\n  }\n\n  handleClick()\n  {\n    if(this.service.getUser()==null)\n    {\n      this.router.navigateByUrl(\"/\");\n    }\n    else\n    {\n      if(this.service.getUser()==\"admin\")\n      {\n        this.router.navigateByUrl(\"/admin\");\n      }\n      else if(this.service.getUser().startsWith(\"user\"))\n      {\n        this.router.navigateByUrl(\"/user\");\n      }\n      else\n      {\n        this.router.navigateByUrl(\"/\");\n      }\n    }\n  }\n\n}\n","<div class=\"container text-center mt-5\">\n\n    <h1 class=\"display-1\">404</h1>\n    <h3 class=\"display-4\">Not Found!</h3>\n    <input type=\"button\" class=\"btn btn-danger\" (click)=\"handleClick()\"  value=\"Go Home\">\n</div>","<div class=\"component\">\n      <h3 class=\"text-center\" style=\"color: #6d7fcc;\">List of Insurers</h3>\n      <br>\n        <table *ngIf=\"dataAvailable\" class=\"table table-bordered text-center\">\n            <thead>\n              <tr>\n                <th scope=\"col\">S.No</th>\n                <th scope=\"col\">Insurer Name</th>\n                <th scope=\"col\">Insurer Package Name</th>\n                <th scope=\"col\">Package Limit</th>\n                <th scope=\"col\">Disbursement Duration</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let insurer of insurers\">\n                  <td>{{insurer.id}}</td>\n                  <td>{{insurer.insurerName}}</td>\n                  <td>{{insurer.insurerPackageName}}</td>\n                  <td>{{insurer.insurerPackageAmountLimit}}</td>\n                  <td>{{insurer.disbursementDuration}}</td>\n              </tr>\n            </tbody>\n        </table>\n        <div *ngIf=\"isFailure\" class=\"alert alert-danger col-6 form\" id=\"errorMessage\" role=\"alert\">\n          {{FailureMsg}}\n      </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { InsurerDetail } from 'src/app/models/InsurerDetail';\nimport { InsuranceClaimServiceService } from 'src/app/service/insurance-claim-service/insurance-claim-service.service';\n\n@Component({\n  selector: 'view-insurers',\n  templateUrl: './view-insurers.component.html',\n  styleUrls: ['./view-insurers.component.css']\n})\nexport class ViewInsurersComponent implements OnInit {\n\n  insurers:InsurerDetail[] = [];\n\n  constructor(private service:InsuranceClaimServiceService) { }\n\n  isFailure:boolean=false;\n  FailureMsg:string=\"\";\n  dataAvailable:boolean=false;\n\n  ngOnInit(): void {\n    this.service.getInsurers().subscribe(\n      (success)=>{\n        this.insurers = success;\n        this.dataAvailable = true;\n      },\n      (error)=>\n      {\n        this.dataAvailable = false;\n        this.isFailure = true;\n        this.FailureMsg = \"Error While retrieving Insurer list\";\n        console.log(this.FailureMsg);\n      });\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'admin-welcome',\n  templateUrl: './admin-welcome.component.html',\n  styleUrls: ['./admin-welcome.component.css']\n})\nexport class AdminWelcomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div id=\"content\">\n    <h1 class=\"h1 display-2 text-center\" style=\"color: #6d7fcc;\">Welcome Admin</h1>\n    <div class=\"center\"> <img src=\"../../../../assets/hospital.jpg\" class=\"hospital\"> </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { LoginServiceService } from 'src/app/service/login-service.service';\n\n@Component({\n  selector: 'user-nav-bar',\n  templateUrl: './user-nav-bar.component.html',\n  styleUrls: ['./user-nav-bar.component.css']\n})\nexport class UserNavBarComponent implements OnInit {\n\n  constructor(private service:LoginServiceService,private router:Router) { }\n\n  ngOnInit(): void {\n  }\n\n  doLogOut()\n  {\n    this.service.logOut();\n    this.router.navigateByUrl(\"/login\");\n  }\n\n\n}\n","<head>\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n</head>    \n    <nav id=\"sidebar\">\n        <div class=\"sidebar-header\">\n            <img src=\"../../../../assets/Hospital-Logo.png\" class=\"logo\">\n        </div>\n\n        <ul class=\"list-unstyled components\">\n            \n            <li>\n                <a routerLink=\"specialists\">Specialists</a>\n            </li>\n            <li>\n                <a routerLink=\"treatment-packages\">Service Packages</a>\n            </li>\n            <li>\n                <a (click)=\"doLogOut()\"><i class=\"fa fa-sign-out\" aria-hidden=\"true\"></i>Logout</a>\n            </li>\n        </ul>\n\n    </nav>","export enum AilmentCategory {\r\n\tORTHOPAIDICS,\r\n\tUROLOGY\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AilmentCategory } from 'src/app/models/AilmentCategory';\nimport { IpTreatmentPackages } from 'src/app/models/IpTreatmentPackages';\nimport { IpTreatmentOfferingServiceService } from 'src/app/service/ipTreatment-offering-service/ip-treatment-offering-service.service';\n\n@Component({\n  selector: 'app-iptreatment-packages',\n  templateUrl: './iptreatment-packages.component.html',\n  styleUrls: ['./iptreatment-packages.component.css']\n})\nexport class IptreatmentPackagesComponent implements OnInit {\n\n  ipTreatmentPackage:IpTreatmentPackages[]=[];\n  filteredPackages:IpTreatmentPackages[] = this.ipTreatmentPackage;\n\n  ailment:string[] = [\"ORTHOPAIDICS\",\"UROLOGY\"];\n  package:string[] = [\"Package 1\",\"Package 2\"] ;\n  \n  constructor(private specialistService:IpTreatmentOfferingServiceService,private form:FormBuilder) { }\n\n  ngOnInit(): void {\n      this.loadData();\n  }\n\n  searchOptions = this.form.group({\n\n    ailment_name : new FormControl(\"\", Validators.required),\n    package_name : [\"\", Validators.required],\n  });\n\n  get ailment_name()\n  {\n    return this.searchOptions.get('ailment_name');\n  }\n\n  get package_name()\n  {\n    return this.searchOptions.get('package_name');\n  }\n\n \n\n  handleSubmit()\n  {\n    \n     this.filteredPackages =  this.ipTreatmentPackage.filter(i=>{\n\n            if(i.ailmentCategory.toString() == this.ailment_name.value && i.packageDetail.treatmentPackageName==this.package_name.value)\n              return true;\n            else\n              return false;\n     });\n\n  }\n\n\n  loadData()\n  {\n    this.specialistService.getPackages().subscribe((data)=>{\n      this.ipTreatmentPackage=data;\n      this.filteredPackages=data;\n    });\n  }\n\n  clearFilters()\n  {\n    this.filteredPackages = this.ipTreatmentPackage;\n    this.ailment_name.setValue(\"\");\n    this.package_name.setValue(\"\");\n  }\n  \n}\n","<div id=\"content\">\n\n    <h3 class=\"text-center\" style=\"color: #6d7fcc;\">Service Packages</h3><br>\n\n    <form [formGroup]=\"searchOptions\" class=\"form\" (ngSubmit)=\"handleSubmit()\">\n        <div class=\"form-group\">\n            <div class=\"col-6\">\n                <label>Select Ailment</label>\n                <select class=\"form-control\" formControlName=\"ailment_name\">\n                    <option selected value=\"\">--Select--</option>\n                    <option *ngFor=\"let a of ailment\" value=\"{{a}}\">{{a}}</option>\n                </select>\n            </div>\n        </div>\n        <br>\n        <div class=\"form-group mb-3\">\n            <div class=\"col-6\">\n                <label>Select Package</label>\n                <select class=\"form-control\" formControlName=\"package_name\">\n                    <option selected value=\"\">--Select--</option>\n                    <option *ngFor=\"let pack of package\" value=\"{{pack}}\">{{pack}}</option>\n                </select>\n            </div>\n        </div>\n\n        <div class=\"form-group\">\n            <input type=\"submit\" value=\"Search\" class=\"btn btn-blue\" />\n            <input type=\"button\" value=\"Clear\" (click)=\"clearFilters()\" class=\"btn btn-blue clear\" />\n        </div>\n    </form>\n    <br>\n    <hr/>\n    <br>\n    <table class=\"table table-bordered text-center\">\n        <thead>\n            <tr>\n                <th rowspan=\"2\">ID</th>\n                <th rowspan=\"2\">Ailment</th>\n                <th colspan=\"4\" class=\"left-border center\">Package Details</th>\n            </tr>\n            <tr>\n                <th class=\"left-border\">Name</th>\n                <th>Test detail</th>\n                <th>Cost</th>\n                <th>Duration in weeks</th>\n            </tr>\n        </thead>\n        <tbody>\n                <tr *ngFor=\"let package of filteredPackages\">\n                    <td>{{package.treatmentPackageId}}</td>\n                    <td>{{package.ailmentCategory}}</td>\n                    <td>{{package.packageDetail.treatmentPackageName}}</td>\n                    <td>{{package.packageDetail.testDetails}}</td>\n                    <td>{{package.packageDetail.cost}}</td>\n                    <td>{{package.packageDetail.treatmentDuration}}</td>\n                </tr>\n        </tbody>\n    </table>\n    </div>\n","import { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { PatientDetails } from 'src/app/models/PatientDetails';\nimport { LoginServiceService } from '../login-service.service';\nimport { TreatmentPlan } from 'src/app/models/TreatmentPlan';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PortalServiceService {\n\n  baseUrl : string = \"http://localhost:8500/portal\"; \n\n  constructor(private http:HttpClient,private loginService:LoginServiceService) { }\n\n  getActivePatients():Observable<PatientDetails[]>\n  {\n    //headers will be automatically set for every request by Interceptor\n    return this.http.get<PatientDetails[]>(this.baseUrl + \"/activePatients\");\n  }\n\n  getInActivePatients():Observable<TreatmentPlan[]>\n  {\n    return this.http.get<TreatmentPlan[]>(this.baseUrl + \"/inActivePatients\");\n  }\n\n  getTreatmentPlan():Observable<TreatmentPlan[]>{\n    return this.http.get<TreatmentPlan[]>(this.baseUrl + \"/trackTreatment\");\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AdminGuardGuard } from './auth/admin-guard.guard';\nimport { UserGuardGuard } from './auth/user-guard.guard';\nimport { AdminWelcomeComponent } from './components/admin/admin-welcome/admin-welcome.component';\nimport { SpecialistListComponent } from './components/specialist-list/specialist-list.component';\nimport { Error404Component } from './error/error404/error404.component';\nimport { UnauthorizedComponent } from './error/unauthorized/unauthorized.component';\nimport { AdminPageComponent } from './pages/admin-page/admin-page.component';\nimport { LoginPageComponent } from './pages/login-page/login-page.component';\nimport { UserPageComponent } from './pages/user-page/user-page.component';\nimport { ActivePatientsComponent } from './components/active-patients/active-patients.component';\nimport { InactivePatientsComponent } from './components/inactive-patients/inactive-patients.component';\nimport { IptreatmentPackagesComponent } from './components/iptreatment-packages/iptreatment-packages.component';\nimport { InsurerNamesComponent } from './components/insurer-names/insurer-names.component';\nimport { ViewInsurersComponent } from './components/view-insurers/view-insurers.component';\nimport { UserWelcomeComponent } from './components/user/user-welcome/user-welcome.component';\nimport { RegisterPatientComponent } from './components/register-patient/register-patient.component';\nimport { TreatmentPlanComponent } from './components/treatment-plan/treatment-plan.component';\nconst routes: Routes = [\n  { \n    path:\"\" , \n    redirectTo: \"/login\" ,\n    pathMatch:\"full\"\n  },\n  {\n    path:\"login\",\n    component:LoginPageComponent,    \n  },\n  { \n    path:\"admin\",\n    component : AdminPageComponent,\n    // pathMatch:\"full\",\n    canActivate : [AdminGuardGuard],\n    canActivateChild : [AdminGuardGuard],\n    children : \n    [\n      {\n        path : \"\",\n        redirectTo : \"/admin/welcome\",\n        pathMatch : \"full\"\n      },\n      {\n        path: \"welcome\",\n        component: AdminWelcomeComponent,\n        pathMatch: \"full\"\n      },\n      {\n        path:\"specialists\",\n        component : SpecialistListComponent,\n        pathMatch : \"full\"\n      },\n      {\n        path:\"insurers\",\n        component : ViewInsurersComponent,\n        pathMatch : \"full\"\n      },\n      {\n        path : \"register-patient\",\n        component : RegisterPatientComponent,\n        pathMatch : \"full\"\n      },\n      {\n        path:\"active-patients\",\n        component : ActivePatientsComponent,\n        pathMatch : \"full\"\n      },\n      {\n        path: \"inactive-patients\",\n        component : InactivePatientsComponent,\n        pathMatch : \"full\"\n      },\n      {\n        path: \"treatment-packages\",\n        component : IptreatmentPackagesComponent,\n        pathMatch : \"full\"\n      },\n      {\n        path:\"treatment-plan\",\n        component : TreatmentPlanComponent,\n        pathMatch : \"full\"\n      },\n      {\n        path:\"insurers-names/:name/:ailment\",\n        component : InsurerNamesComponent,\n        // pathMatch : \"full\"\n      }\n    ]\n  },\n  { \n    path: \"user\",\n    component : UserPageComponent,\n    canActivate : [UserGuardGuard],\n    canActivateChild : [UserGuardGuard],\n    children : \n    [\n      {\n        path : \"\",\n        redirectTo : \"/user/welcome\",\n        pathMatch : \"full\"\n      },\n      {\n        path: \"welcome\",\n        component: UserWelcomeComponent,\n        pathMatch: \"full\"\n      },\n      {\n        path:\"specialists\",\n        component : SpecialistListComponent,\n        pathMatch : \"full\"\n      },\n      {\n        path: \"treatment-packages\",\n        component : IptreatmentPackagesComponent,\n        pathMatch : \"full\"\n      }\n    ]\n  },\n  {\n    path:\"401\",\n    component : UnauthorizedComponent,\n    pathMatch : \"full\"\n  },\n  {\n    path:\"**\",\n    pathMatch:\"full\",\n    component:Error404Component,\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, CanActivateChild, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { LoginServiceService } from '../service/login-service.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGuardGuard implements CanActivate,CanActivateChild {\n  \n  constructor(private service:LoginServiceService,private router:Router){}\n  canActivateChild(childRoute: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean | UrlTree | Observable<boolean | UrlTree> | Promise<boolean | UrlTree> {\n    if(this.service.getUser()=='admin')\n      {\n        return true;\n      }\n      else\n      {\n        this.router.navigateByUrl(\"/401\");\n        return false;\n      }\n  }\n  \n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    \n      if(this.service.getUser()=='admin')\n      {\n        return true;\n      }\n      else\n      {\n        this.router.navigateByUrl(\"/401\");\n        return false;\n      }\n    \n  }\n\n\n\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { InitiateClaim } from 'src/app/models/InitiateClaim';\nimport { InsurerDetail } from 'src/app/models/InsurerDetail';\nimport { LoginServiceService } from '../login-service.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InsuranceClaimServiceService {\n\n  baseUrl : string = \"http://localhost:8500/portal\"; \n\n  constructor(private http:HttpClient,private loginService:LoginServiceService) { }\n\n  getInsurers():Observable<InsurerDetail[]>\n  {\n    //headers will be automatically set for every request by Interceptor\n    return this.http.get<InsurerDetail[]>(this.baseUrl + \"/getAllInsurerDetail\");\n  }\n\n  initiateClaimRequest(initiateClaim:InitiateClaim):Observable<number>\n  {\n    return this.http.post<number>(this.baseUrl + \"/initiateClaim\",initiateClaim);\n  }\n\n\n}\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}